# Copyright [2020] [University of Aizu]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require './app/command/base'
require './lib/attack/attack_env'
require './modules/ui'

module Command
  class Exploit < Base
    attr_reader :vultest_case, :control_vulenv, :attack_host, :attack_user, :attack_passwd

    def initialize(args)
      @vultest_case = args[:vultest_case]
      @control_vulenv = args[:control_vulenv]

      @attack_host = args[:attack_host]
      @attack_user = args[:attack_user]
      @attack_passwd = args[:attack_passwd]
    end

    def execute(&block)
      if vultest_case.nil? || control_vulenv.nil?
        VultestUI.error('There is not the vulnerable environment which is attack target')
        return
      end

      return unless prepare_attack_host?

      attack_env = prepare_attack_env
      attack_env.execute_attack?

      block.call(attack_host: attack_host, attack_env: attack_env)
    end

    private

    def prepare_attack_env
      attack_vector = vultest_case.vulenv_config['attack_vector']
      attack_config = vultest_case.attack_config

      AttackEnv.new(
        attack_host: attack_host,
        attack_user: attack_user,
        attack_passwd: attack_passwd,
        attack_config: attack_config,
        attack_vector: attack_vector
      )
    end

    def prepare_attack_host?
      attack_vector = vultest_case.vulenv_config['attack_vector']

      if attack_vector == 'local'
        @attack_host = '192.168.177.177'
        VultestUI.execute('Change value of ATTACKHOST')
        VultestUI.execute('ATTACKHOST => 192.168.177.177')
      elsif attack_vector == 'remote' && attack_host.nil?
        VultestUI.error('Cannot find the attack host')
        VultestUI.warring('Execute : SET ATTACKHOST attack_host_ip_address')
        return false
      end

      true
    end
  end
end
