---
- name: apt-get update
  apt:
    update_cache: yes
  when: ansible_distribution == "Ubuntu"
- name: Install necessary package
  apt:
    name: "{{packages}}"
  vars:
    packages:
      - build-essential
      - libreadline5
      - libreadline-dev
      - libssl-dev
      - libpcap-dev
      - libxml2-dev
      - libxslt1-dev
      - libyaml-dev
      - libsqlite3-dev
      - postgresql
      - libpq5
      - libpq-dev
      - subversion
      - git
      - git-core
      - autoconf
      - curl
      - zlib1g-dev
  when: ansible_distribution == "Ubuntu"

- name: create user for metasploit
  user:
    name: "{{user}}"
    state: present
    shell: /bin/bash

# Install ruby
- name: git clone --depth 1 https://github.com/sstephenson/rbenv.git
  git:
    repo: 'https://github.com/sstephenson/rbenv.git'
    dest: "{{user_dir}}/.rbenv"
    depth: 1
  become_user: "{{user}}"

- name: git clone --depth 1 https://github.com/sstephenson/ruby-build.git
  git:
    repo: 'https://github.com/sstephenson/ruby-build.git'
    dest: "{{user_dir}}/.rbenv/plugins/ruby-build"
    depth: 1
  become_user: "{{user}}"

- name: set environment of ruby in .bashrc
  lineinfile:
    dest: "{{user_dir}}/.profile"
    line: "{{item}}"
  with_items:
    - 'export PATH="~/.rbenv/bin:$PATH"'
    - 'eval "$(rbenv init -)"'
  become_user: "{{user}}"

- name: source .bashrc
  shell: /bin/bash -lc "source {{user_dir}}/.profile"
  become_user: "{{user}}"

- name: rbenv install "{{ruby_version}}"
  shell: /bin/bash -lc "rbenv install {{ruby_version}}"
  become_user: "{{user}}"
  ignore_errors: True

- name: rbenv global "{{ruby_version}}"
  shell: /bin/bash -lc "rbenv global {{ruby_version}}"
  become_user: "{{user}}"

# Install PostgreSQL
- name: Install PostgreSQL
  apt:
    name: "{{packages}}"
    update_cache: yes
  vars:
    packages:
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
      - python-psycopg2
  when: ansible_distribution == "Ubuntu"

- name: create user for postgresql
  postgresql_user:
    name: msf
    password: metasploit
    login_user: postgres
    state: present
    role_attr_flags: NOSUPERUSER,NOCREATEROLE,NOCREATEDB
  become_user: postgres

- name: create DB for metasploit
  postgresql_db:
    name: msf
    owner: msf
    login_user: postgres
    encoding: UTF-8
  become_user: postgres

# Install metasploit
- name: git clone --depth 1 https://github.com/rapid7/metasploit-framework.git
  git:
    repo: https://github.com/rapid7/metasploit-framework.git
    dest: "{{user_dir}}/metasploit-framework"
    depth: 1
  become_user: "{{user}}"

- name: gem install bundler
  gem:
    name: bundler
    executable: "{{user_dir}}/.rbenv/shims/gem"
    user_install: no
    state: latest
  become_user: "{{user}}"

- name: bundle install
  bundler:
    state: present
    gemfile: "{{user_dir}}/metasploit-framework/Gemfile"
    executable: "{{user_dir}}/.rbenv/shims/bundle"
    user_install: no
  become_user: "{{user}}"

# Database of metasploit
- name: configure database of metasploit
  copy:
    src: ../files/database.yml
    dest: "{{user_dir}}/metasploit-framework/config/database.yml"
    owner: "{{user}}"
    mode: 0755

