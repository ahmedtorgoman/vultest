---
- name: Download PHP
  get_url:
    url: http://php.net/get/php-{{ version }}.tar.gz/from/this/mirror
    dest: "{{ src_dir }}/php-{{ version }}.tar.gz"
    validate_certs: no

- name: Unarchive PHP
  unarchive:
    src: "{{ src_dir }}/php-{{ version }}.tar.gz"
    dest: "{{ src_dir }}"
    copy: no

- name: ./configure
  shell: "{{ configure_command }}"
  args:
    chdir: "{{ src_dir }}/php-{{ version }}"

- name: make
  shell: make
  args:
    chdir: "{{ src_dir }}/php-{{ version }}"

- name: make install
  shell: make install
  args:
    chdir: "{{ src_dir }}/php-{{ version }}"

- name: Create php.ini (php_path = /usr/local/bin/php)
  block:
    - name: Search path of phpinfo
      shell: "php -r 'echo phpinfo();' | grep '(php.ini)' | sed 's/.* => //'"
      register: phpinfo_path
      environment:
        PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

    - name: "cp {{ src_dir }}/php-{{ version }}/php.ini-production {{ phpinfo_path.stdout }}/php.ini"
      copy:
        src: "{{ src_dir }}/php-{{ version }}/php.ini-production"
        dest: "{{ phpinfo_path.stdout }}/php.ini"
        owner: root
        group: root
        mode: "0755"
  when: software_path == "/usr/local/bin/php"

- name: "Create php.ini (php_path = {{ software_path }})"
  block:
    - name: Search path of phpinfo
      shell: "php -r 'echo phpinfo();' | grep '(php.ini)' | sed 's/.* => //'"
      register: phpinfo_path
      environment:
        PATH: "{{ software_path }}/bin:{{ ansible_env.PATH }}"

    - name: "cp {{ src_dir }}/php-{{ version }}/php.ini-production {{ phpinfo_path.stdout }}/php.ini"
      copy:
        src: "{{ src_dir }}/php-{{ version }}/php.ini-production"
        dest: "{{ phpinfo_path.stdout }}/php.ini"
        owner: root
        group: root
        mode: "0755"
  when: software_path != "/usr/local/bin/php"
